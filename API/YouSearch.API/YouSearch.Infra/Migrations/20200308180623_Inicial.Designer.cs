// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YouSearch.Infra.Configuracao.EFCore;

namespace YouSearch.Infra.Migrations
{
    [DbContext(typeof(AplicacaoContexto))]
    [Migration("20200308180623_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YouSearch.Dominio.Entidades.PageInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("resultsPerPage");

                    b.Property<int>("totalResults");

                    b.HasKey("Id");

                    b.ToTable("PageInfo");
                });

            modelBuilder.Entity("YouSearch.Dominio.Entidades.SearchResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("etag");

                    b.Property<string>("items");

                    b.Property<string>("kind");

                    b.Property<string>("nextPageToken");

                    b.Property<int?>("pageInfoId");

                    b.Property<string>("prevPageToken");

                    b.HasKey("Id");

                    b.HasIndex("pageInfoId");

                    b.ToTable("SearchResponse");
                });

            modelBuilder.Entity("YouSearch.Dominio.Entidades.SearchResponse", b =>
                {
                    b.HasOne("YouSearch.Dominio.Entidades.PageInfo", "pageInfo")
                        .WithMany()
                        .HasForeignKey("pageInfoId");
                });
#pragma warning restore 612, 618
        }
    }
}
